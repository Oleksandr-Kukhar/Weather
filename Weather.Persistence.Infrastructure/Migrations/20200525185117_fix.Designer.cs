// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Weather.Persistence.Infrastructure;

namespace Weather.Persistence.Infrastructure.Migrations
{
    [DbContext(typeof(SensorsDataBaseContext))]
    [Migration("20200525185117_fix")]
    partial class fix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Weather.Persistence.Model.CriticalValues", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<string>("ValueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CriticalValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a0ba29a-83ef-4d6c-8cb1-fb28150bd584"),
                            Value = 0.0,
                            ValueName = "MinimalWindSpeed"
                        },
                        new
                        {
                            Id = new Guid("3c0a51a2-dd03-4ed9-8bbc-eea553214235"),
                            Value = 10.0,
                            ValueName = "MaximalWindSpeed"
                        },
                        new
                        {
                            Id = new Guid("a9d38d73-53ab-407b-93ed-8ab04ab11867"),
                            Value = 1000.0,
                            ValueName = "MinimalPressure"
                        },
                        new
                        {
                            Id = new Guid("d667d696-d52a-47c8-9b66-2178ce291c6a"),
                            Value = 1100.0,
                            ValueName = "MaximalPressure"
                        },
                        new
                        {
                            Id = new Guid("0e44f9e1-666d-4a16-8906-ec9979a2a37f"),
                            Value = 30.0,
                            ValueName = "MinimalHumidity"
                        },
                        new
                        {
                            Id = new Guid("84f5660f-6616-405d-b3a6-f269a18f6692"),
                            Value = 100.0,
                            ValueName = "MaximalHumidity"
                        },
                        new
                        {
                            Id = new Guid("b88eb944-fe18-4ad6-bb68-f61665094c36"),
                            Value = 278.0,
                            ValueName = "MinimalTemperature"
                        },
                        new
                        {
                            Id = new Guid("5c3e4881-16d2-4a88-bcd1-a9a3af7c4798"),
                            Value = 288.0,
                            ValueName = "MaximalTemperature"
                        });
                });

            modelBuilder.Entity("Weather.Persistence.Model.Humidity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Humidity");
                });

            modelBuilder.Entity("Weather.Persistence.Model.Pressure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pressure");
                });

            modelBuilder.Entity("Weather.Persistence.Model.Temperature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Temperature");
                });

            modelBuilder.Entity("Weather.Persistence.Model.Wind", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Wind");
                });
#pragma warning restore 612, 618
        }
    }
}
